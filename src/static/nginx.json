{
  "Description": "AWS EC2 NGINX webserver",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "VPC",
            "Subnet",
            "RemoteAccessCIDR"
          ]
        },
        {
          "Label": {
            "default": "Linux Instance Configuration"
          },
          "Parameters": [
            "KeyPair",
            "LinuxInstanceType",
            "LatestAmiId"
          ]
        }
      ],
      "ParameterLabels": {
        "VPC": {
          "default": "VPC"
        },
        "Subnet": {
          "default": "Subnet"
        },
        "KeyPair": {
          "default": "Key Pair"
        },
        "RemoteAccessCIDR": {
          "default": "10.0.0.0/16"
        },
        "LinuxInstanceType": {
          "default": "Linux Instance Type"
        },
        "LatestAmiId": {
          "default": "SSM key to the latest Amazon linux AMI"
        }
      }
    }
  },
  "Parameters": {
    "VPC": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "Select the VPC where the EC2 instances will be created",
      "ConstraintDescription": "must be an existing VPC",
      "Default": "vpc-0719a1184fa5ccdcd"
    },
    "Subnet": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "Select the subnet where the EC2 instances will be created",
      "ConstraintDescription": "must be an existing subnet",
      "Default": "subnet-07c1a5153af279dab"
    },
    "KeyPair": {
      "Description": "Name of existing EC2 key pair for Linux Instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "kumo-key"
    },
    "RemoteAccessCIDR": {
      "Description": "CIDR block to allow access to linux instances",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
      "Default": "10.0.0.0/16"
    },
    "InstanceType": {
      "Type": "String",
      "Default": "t3.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.medium",
        "t3.micro",
        "t3.medium",
        "t3.large"
      ]
    },
    "LatestAmiId": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    }
  },
  "Resources": {
    "WebSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Enable HTTP and HTTPS access",
        "SecurityGroupIngress": [
          {
            "Description": "allow incoming HTTP",
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "Description": "allow incoming HTTPS",
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "Description": "allow icmp",
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": {
              "Ref": "RemoteAccessCIDR"
            }
          },
          {
            "Description": "allow SSH",
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "RemoteAccessCIDR"
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "Description": "allow outgoing HTTP",
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "Description": "allow outgoing HTTPS",
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "WebServerInstance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "All": [
              "extras",
              "confignginx"
            ]
          },
          "extras": {
            "commands": {
              "enable_nginx": {
                "command": "amazon-linux-extras enable nginx1.12"
              }
            }
          },
          "confignginx": {
            "packages": {
              "yum": {
                "nginx": []
              }
            },
            "files": {
              "/usr/share/nginx/html/index.html": {
                "content": {
                  "Fn::Join": [
                    "\n",
                    [
                      "<h1>Welcome to your new NGINX webserver.  web files can be found in /usr/share/nginx/html </h1>"
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              }
            },
            "services": {
              "sysvinit": {
                "nginx": {
                  "enabled": "true",
                  "ensureRunning": "true"
                }
              }
            }
          }
        }
      },
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "ImageId": {
          "Ref": "LatestAmiId"
        },
        "KeyName": {
          "Ref": "KeyPair"
        },
        "IamInstanceProfile": {
          "Ref": "PatchingInstanceProfile"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "EC2-NGINX-${AWS::StackName}"
            }
          }
        ],
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "WebSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "yum update -y aws-cfn-bootstrap\n",
                "# Install the files and packages from the metadata\n",
                "/opt/aws/bin/cfn-init -v ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource WebServerInstance ",
                "         --configsets All ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "# Signal the status from cfn-init\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource WebServerInstance ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT5M"
        }
      }
    },
    "InstancePatchingRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM",
          "arn:aws:iam::aws:policy/AmazonSSMFullAccess"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "PatchingInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "InstancePatchingRole"
          }
        ]
      }
    },
    "LinuxPatchBaseline": {
      "Type": "AWS::SSM::PatchBaseline",
      "Properties": {
        "OperatingSystem": "AMAZON_LINUX",
        "ApprovalRules": {
          "PatchRules": [
            {
              "ApproveAfterDays": 0,
              "ComplianceLevel": "CRITICAL",
              "EnableNonSecurity": true,
              "PatchFilterGroup": {
                "PatchFilters": [
                  {
                    "Key": "PRODUCT",
                    "Values": [
                      "*"
                    ]
                  },
                  {
                    "Key": "CLASSIFICATION",
                    "Values": [
                      "Security",
                      "Bugfix",
                      "Enhancement",
                      "Recommended"
                    ]
                  },
                  {
                    "Key": "SEVERITY",
                    "Values": [
                      "Critical",
                      "Important",
                      "Medium",
                      "Low"
                    ]
                  }
                ]
              }
            }
          ]
        },
        "Description": "Service Catalog EC2 Reference Architecture Patch Baseline for Amazon Linux instace",
        "Name": "sc-ec2-ra-linux-patch-baseline"
      }
    },
    "MaintenanceWindowRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com",
                  "ssm.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "MaintenanceWindow": {
      "Type": "AWS::SSM::MaintenanceWindow",
      "Properties": {
        "Description": "Maintenance window to allow for patching Amazon Linux instances",
        "AllowUnassociatedTargets": false,
        "Cutoff": 2,
        "Schedule": "cron(* 17 * * ? *)",
        "Duration": 6,
        "Name": "sc-ec2-ra-linux-maintenance-window"
      }
    },
    "LinuxMainteanceWindowTarget": {
      "Type": "AWS::SSM::MaintenanceWindowTarget",
      "Properties": {
        "OwnerInformation": "Service Catalog EC2 Reference Architecture",
        "Description": "Service Catalog EC2 Reference Architecture - Patch Maintenance for Amazon Linux Instances",
        "WindowId": {
          "Ref": "MaintenanceWindow"
        },
        "ResourceType": "INSTANCE",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "WebServerInstance"
              }
            ]
          }
        ],
        "Name": "sc-ec2-ra-linux-patch-targets"
      }
    },
    "LinuxMaintenanceWindowTaskScan": {
      "Type": "AWS::SSM::MaintenanceWindowTask",
      "Properties": {
        "MaxErrors": 1,
        "Description": "Service Catalog EC2 Reference Architecture Maintenance Window Task: Scan for update for Amazon Linux Instance",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "MaintenanceWindowRole",
            "Arn"
          ]
        },
        "Priority": 1,
        "MaxConcurrency": 1,
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "WebServerInstance"
              }
            ]
          }
        ],
        "Name": "patch-sc-ec2-ra-linux-nginx-instances",
        "TaskArn": "AWS-RunPatchBaseline",
        "WindowId": {
          "Ref": "MaintenanceWindow"
        },
        "TaskParameters": {
          "Operation": {
            "Values": [
              "Scan"
            ]
          }
        },
        "TaskType": "RUN_COMMAND"
      }
    },
    "LinuxMaintenanceWindowTaskInstall": {
      "Type": "AWS::SSM::MaintenanceWindowTask",
      "Properties": {
        "MaxErrors": 1,
        "Description": "Service Catalog EC2 RA Maintenance Window Task: Install update for Amazon Linux Instance",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "MaintenanceWindowRole",
            "Arn"
          ]
        },
        "Priority": 2,
        "MaxConcurrency": 1,
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values": [
              {
                "Ref": "WebServerInstance"
              }
            ]
          }
        ],
        "Name": "patch-sc-ec2-ra-linux-nginx-instances",
        "TaskArn": "AWS-RunPatchBaseline",
        "WindowId": {
          "Ref": "MaintenanceWindow"
        },
        "TaskParameters": {
          "Operation": {
            "Values": [
              "Install"
            ]
          }
        },
        "TaskType": "RUN_COMMAND"
      }
    }
  },
  "Outputs": {
    "WebsiteURL": {
      "Description": "DNS root URL of the new webserver",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "WebServerInstance",
                "PublicDnsName"
              ]
            }
          ]
        ]
      }
    },
    "WebsiteIP": {
      "Description": "IP root URL of the new webserver",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "WebServerInstance",
                "PublicIp"
              ]
            }
          ]
        ]
      }
    }
  }
}
